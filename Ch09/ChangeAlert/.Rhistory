library("jsonlite")
gettophot <- function() {
hot <- "https://www.reddit.com/hot/.json"
hot.df <- fromJSON(hot);
return(hot.df$data$children$data$title[1])
}
tracktophot <- function() {
ifelse(!exists("tophothist"),tophothist <<- gettophot()) #If it's NA (not initialized), start tracking it.
same <- tophothist == gettophot()
if (!same) {
tophothist <<- gettophot()
cat("\n at ",format(Sys.time(),"%a %b %d %X %Y"), " New Top Hot: ", gettophot())
}
cancelfunc <<- later(tracktophot,3600)
}
tracktophot()
library("later")
tracktophot()
# Track the change of the top hot
gettophot <- function() {
hot <- "https://www.reddit.com/hot/.json"
hot.df <- fromJSON(hot);
return(hot.df$data$children$data$title[1])
}
tracktophot <- function() {
ifelse(!exists("tophothist"),tophothist <<- gettophot(),) #If it's NA (not initialized), start tracking it.
same <- tophothist == gettophot()
if (!same) {
tophothist <<- gettophot()
cat("\n at ",format(Sys.time(),"%a %b %d %X %Y"), " New Top Hot: ", gettophot())
}
cancelfunc <<- later(tracktophot,3600)
}
tracktophot()
# Track the change of the top hot
gettophot <- function() {
hot <- "https://www.reddit.com/hot/.json"
hot.df <- fromJSON(hot);
return(hot.df$data$children$data$title[1])
}
tracktophot <- function() {
ifelse(!exists("tophothist"),tophothist <<- gettophot(),"") #If it's NA (not initialized), start tracking it.
same <- tophothist == gettophot()
if (!same) {
tophothist <<- gettophot()
cat("\n at ",format(Sys.time(),"%a %b %d %X %Y"), " New Top Hot: ", gettophot())
}
cancelfunc <<- later(tracktophot,3600)
}
tracktophot()
tophothist<-"Purposefully Wrong"
cancelfunc()
## Track changes of webpages
install.packages("compareDF")
library(compareDF)
library("rvest");
addr <- "https://nces.ed.gov/collegenavigator/?s=MS&pg=2&id=175616"
page <- read_html(addr);
nodes <- html_nodes(page,".tabular td");
totfaculty <- html_text(nodes)[2]
paste("The total number of faculty are",totfaculty);
addr2 <- "https://nces.ed.gov/collegenavigator/?s=LA&id=158477"
page2 <- read_html(addr2)
comparetable <- compare_df(page,page2)
page2
comparetable <- compare_df(page[2],page2[2])
## Track changes of webpages
install.packages("diffr")
library(diffr)
diffr(page,page2)
download.file(addr,"file1.html");
download.file(addr2,"file2.html");
diffr("file1.html","file2.html");
library("shiny");
install.packages("shiny");
library("shiny");
diffr("file1.html","file2.html", contextSize=0);
addr <- "https://web.archive.org/web/20200102195729/http://www.deltastate.edu/"
addr2 <- "https://web.archive.org/web/20191202220905/http://www.deltastate.edu/"
download.file(addr,"file1.html");
download.file(addr2,"file2.html");
diffr("file1.html","file2.html", contextSize=0);
library(diffr)
library(rvest)
?read_html
page <- read_html(system.file("extdata", "simple-webpage-1.html", package="xml2")));
page <- read_html(system.file("extdata", "simple-webpage-1.html", package="xml2"));
?system.file
page <- read_html(system.file("simple-webpage-1.html"));
page <- read_html(system.file(file="simple-webpage-1.html"));
?read.file
?read_html
page <- read_html(system.file("extdata", "simple-webpage-1.html", package = "xml2"))
setwd("~/OneDrive/Documents/Writing/PR4/Chapter 9 Code/ChangeAlert")
page <- read_html(system.file("extdata", "simple-webpage-1.html", package = "xml2"))
page <- read_html(readLines("simple-webpage-1.html"))
page
nodes <- html_nodes(page,"thedata");
nodes
?html_nodes
nodes <- html_nodes(page,"body");
nodes <- html_nodes(page,"B");
nodes
page
nodes <- html_nodes(page,".thedata");
page <- read_html(readLines("simple-webpage-1.html"))
nodes <- html_nodes(page,".thedata");
page <- read_html(readLines("simple-webpage-1.html"))
page
nodes <- html_nodes(page,"B");
nodes <- html_nodes(page,"thedata");
addr <- "https://nces.ed.gov/collegenavigator/?s=MS&pg=2&id=175616"
page <- read_html(addr);
nodes <- html_nodes(page,".tabular td");
totfaculty <- html_text(nodes)[2]
paste("The total number of faculty are",totfaculty);
addr <- "https://nces.ed.gov/collegenavigator/?id=175616"
page <- read_html(addr);
nodes <- html_nodes(page,".tabular td");
totfaculty <- html_text(nodes)[2]
paste("The total number of faculty are",totfaculty);
addr <- "https://www.internetlivestats.com"
page <- read_html(addr);
page
nodes <- html_nodes(page,"rts-counter");
nodes <- html_nodes(page,"google_searches/today");
nodes <- html_nodes(page,"google_searches");
nodes <- html_nodes(page,"center");
nodes <- html_nodes(page,"clearfix visible-md visible-lg visible-xl");
page
page[2]
View(page)
nodes <- html_nodes(page,"a");
nodes
nodes <- html_nodes(page,"span");
nodes
download.file('https://www.internetlivestats.com','statsnapshot.html');
page <- read_html(readLines(file="statsnapshot.html"))
page <- read_html(readLines("statsnapshot.html"))
page2 <- read_html(readLines("statsnapshot.html"))
rm(page)
page <- read_html(readLines("statsnapshot.html"))
nodes <- html_nodes(page,"span");
nodes
View(page)
install.packages("V8")
library(V8)
#download.file('https://www.internetlivestats.com','statsnapshot.html');
link <- 'https://www.internetlivestats.com'
#Read the html page content and extract all javascript codes that are inside a list
emailjs <- read_html(link) %>% html_nodes('li') %>% html_nodes('script') %>% html_text()
# Create a new v8 context
ct <- v8()
read_html(ct$eval(gsub('document.write','',emailjs))) %>%
html_text()
#parse the html content from the js output and print it as text
read_html(ct$eval(gsub('document.write','',emailjs)))
#Read the html page content and extract all javascript codes that are inside a list
emailjs <- read_html(link) %>% html_nodes('li') %>% html_nodes('script') %>% html_text()
#Read the html page content and extract all javascript codes that are inside a list
emailjs <- read_html(link) %>% html_nodes('span') %>% html_nodes('script') %>% html_text()
#Read the html page content and extract all javascript codes that are inside a list
emailjs <- read_html(link) %>% html_nodes('script') %>% html_text()
# Create a new v8 context
ct <- v8()
#parse the html content from the js output and print it as text
read_html(ct$eval(gsub('document.write','',emailjs)))
## Track changes of simple webpages that you have targeted info on that have active javascript, Using PhantomJS (https://phantomjs.org/download.html)
system("./phantomjs get_internetlivestats.js")
library(rvest)
page <- read_html(readLines("livestats.html"))
View(page)
node <- html_nodes(page,"rts-counter")
node <- html_nodes(page,"span")
node <- html_nodes(page,"content")
?html_nodes
html_name("span")
html_name(page,"span")
node <- html_nodes(page,"table")
node <- html_nodes(page,"body")
page <- read_html(readLines("livestats.html"))
View(page)
node <- html_nodes(page,"head")
node
view(node)
View(node)
node <- html_nodes(page,"html")
node <- html_nodes(page,"a")
raw(page)
html_text(page)
xml_attr(page)
xml_attrs(page)
node <- html_nodes(page,"en")
node <- html_nodes(page,"span")
node <- html_nodes(page,"content")
page <- read_html(readLines("livestats.html"))
page <- read_html("livestats.html")
page
node <- html_nodes(page,"rts-counter")
node
View(page)
node <- html_nodes(page,"span")
node
html_text(nodes)
html_text(node)
html_text(node)$22
html_text(node)[22]
as.numeric(html_text(node)[22])
as.numeric(as.character(html_text(node)[22]))
str(html_text(node)[22])
# The number we want, Emails sent Today, is element 22
# html_text(node)[22]
num-emails <- as.numeric(gsub(",","",html_text(node)[22]))
# The number we want, Emails sent Today, is element 22
# html_text(node)[22]
num.emails <- as.numeric(gsub(",","",html_text(node)[22]))
num.emails <- as.numeric(gsub(",","",html_text(node)[22]))
# we can now alert if that number is above our critical cutoff (130 billion, 130,000,000,000)
if (html_text(node)[22] > 130000000000)
{ cat("Above!") } else { cat("Below!") }
if (num.emails > 130000000000)
{ cat("Above!") } else { cat("Below!") }
system("./phantomjs get_internetlivestats.js")
page <- read_html("livestats.html")
node <- html_nodes(page,"span")
# The number we want, Emails sent Today, is element 22
# html_text(node)[22]
num.emails <- as.numeric(gsub(",","",html_text(node)[22]))
# we can now alert if that number is above our critical cutoff (130 billion, 130,000,000,000)
if (num.emails > 130000000000)
{ cat("Above!") } else { cat("Below!") }
library("pushoverr")
library(rvest)
set_pushover_app(token="ad7w7uqezs9zav81yev7znjhazgsz1")
set_pushover_user(user="GnoBrXCawlXUwcBSCGkhKBUgC1IMSO")
checkmail <- function() {
system("./phantomjs get_internetlivestats.js")
page <- read_html("livestats.html")
node <- html_nodes(page,"span")
# The number we want, Emails sent Today, is element 22
# html_text(node)[22]
num.emails <- as.numeric(gsub(",","",html_text(node)[22]))
# we can now alert if that number is above our critical cutoff (130 billion, 130,000,000,000)
if (num.emails > 130000000000)
{ pushover(message = "It's Above!") } else { pushover(message = "It's Still Below!") }
cancelfunc <<- later(checkmail,300)
}
checkmail()
library(later)
checkmail()
rm(num.emails)
cancelfunc()
msg <<- pushover_emergency(message = "It's Above!")
num.emails <- 100000000000000000
num.emails > 130000000000
num.emails > 130000000000 & is.acknowledged((msg$receipt))
num.emails > 130000000000 & is.acknowledged((msg$receipt))
rm(msg)
is.acknowledged((msg$receipt))
# This modified function downloads the live stats, and checks them. It then
# notifies you if the number of emails sent is above 130,000,000,000
# It also will require that you acknowledge it or it will keep sending
msg$receipt <- FALSE
exists(msg)
?exists
exists("msg")
checkmail <- function() {
system("./phantomjs get_internetlivestats.js")
page <- read_html("livestats.html")
node <- html_nodes(page,"span")
# The number we want, Emails sent Today, is element 22
# html_text(node)[22]
num.emails <- as.numeric(gsub(",","",html_text(node)[22]))
# we can now alert if that number is above our critical cutoff (130 billion, 130,000,000,000)
if (num.emails > 130000000000)
{ if (exists("msg") & !is.acknowledged((msg$receipt))) {
pushover(message = "It's Still Above, and No One Acknowledged") } else { pushover(message = "It's Above, but someone has acknowledged") }
} else { msg <<- pushover_emergency(message = "It's Above!") }
}
cancelfunc <<- later(checkmail,300)
}
checkmail <- function() {
system("./phantomjs get_internetlivestats.js")
page <- read_html("livestats.html")
node <- html_nodes(page,"span")
# The number we want, Emails sent Today, is element 22
# html_text(node)[22]
num.emails <- as.numeric(gsub(",","",html_text(node)[22]))
# we can now alert if that number is above our critical cutoff (130 billion, 130,000,000,000)
if (num.emails > 130000000000)
{ if (exists("msg") & !is.acknowledged((msg$receipt))) {
pushover(message = "It's Still Above, and No One Acknowledged") } else { pushover(message = "It's Above, but someone has acknowledged") }
} else { msg <<- pushover_emergency(message = "It's Above!") }
cancelfunc <<- later(checkmail,300)
}
checkmail()
exists("msg")
checkmail <- function() {
system("./phantomjs get_internetlivestats.js")
page <- read_html("livestats.html")
node <- html_nodes(page,"span")
# The number we want, Emails sent Today, is element 22
# html_text(node)[22]
num.emails <- as.numeric(gsub(",","",html_text(node)[22]))
# we can now alert if that number is above our critical cutoff (130 billion, 130,000,000,000)
if (num.emails > 130000000000)
{ if (exists("msg")) {
if (!is.acknowledged((msg$receipt))) {
pushover(message = "It's Still Above, and No One Acknowledged") } else { pushover(message = "It's Above, but someone has acknowledged") }
} } else { msg <<- pushover_emergency(message = "It's Above!") }
cancelfunc <<- later(checkmail,300)
}
checkmail()
system("./phantomjs get_internetlivestats.js")
page <- read_html("livestats.html")
node <- html_nodes(page,"span")
# The number we want, Emails sent Today, is element 22
# html_text(node)[22]
num.emails <- as.numeric(gsub(",","",html_text(node)[22]))
num.emails > 130000000000
msg <<- pushover_emergency(message = "It's Above!")
if (exists("msg")) {
if (!is.acknowledged((msg$receipt))) {
pushover(message = "It's Still Above, and No One Acknowledged") } else { pushover(message = "It's Above, but someone has acknowledged") }
}
checkmail <- function() {
system("./phantomjs get_internetlivestats.js")
page <- read_html("livestats.html")
node <- html_nodes(page,"span")
# The number we want, Emails sent Today, is element 22
# html_text(node)[22]
num.emails <- as.numeric(gsub(",","",html_text(node)[22]))
# we can now alert if that number is above our critical cutoff (130 billion, 130,000,000,000)
if (num.emails > 130000000000)
{ if (exists("msg")) {
if (!is.acknowledged((msg$receipt))) {
pushover(message = "It's Still Above, and No One Acknowledged") } else { pushover(message = "It's Above, but someone has acknowledged") }
} else { msg <<- pushover_emergency(message = "It's Above!") } }
cancelfunc <<- later(checkmail,300)
}
checkmail <- function() {
system("./phantomjs get_internetlivestats.js")
page <- read_html("livestats.html")
node <- html_nodes(page,"span")
# The number we want, Emails sent Today, is element 22
# html_text(node)[22]
num.emails <- as.numeric(gsub(",","",html_text(node)[22]))
# we can now alert if that number is above our critical cutoff (130 billion, 130,000,000,000)
if (num.emails > 130000000000)
{ if (exists("msg")) {
if (!is.acknowledged((msg$receipt))) {
pushover(message = "It's Still Above, and No One Acknowledged") } else { pushover(message = "It's Above, but someone has acknowledged") }
} else { msg <<- pushover_emergency(message = "It's Above!") } }
cancelfunc <<- later(checkmail,300)
}
checkmail()
msg
rm("msg")
msg
checkmail <- function() {
system("./phantomjs get_internetlivestats.js")
page <- read_html("livestats.html")
node <- html_nodes(page,"span")
# The number we want, Emails sent Today, is element 22
# html_text(node)[22]
num.emails <- as.numeric(gsub(",","",html_text(node)[22]))
# we can now alert if that number is above our critical cutoff (130 billion, 130,000,000,000)
if (num.emails > 130000000000)
{ if (exists("msg")) {
if (!is.acknowledged((msg$receipt))) {
pushover(message = "It's Still Above, and No One Acknowledged") } else { pushover(message = "It's Above, but someone has acknowledged. No Further messages until it trips again."); rm("msg"); }
} else { msg <<- pushover_emergency(message = "It's Above!") } }
cancelfunc <<- later(checkmail,300)
}
checkmail <- function() {
#system("./phantomjs get_internetlivestats.js")
page <- read_html("livestats.html")
node <- html_nodes(page,"span")
# The number we want, Emails sent Today, is element 22
# html_text(node)[22]
num.emails <- as.numeric(gsub(",","",html_text(node)[22]))
# we can now alert if that number is above our critical cutoff (130 billion, 130,000,000,000)
if (num.emails > 130000000000)
{ if (exists("msg")) {
if (!is.acknowledged((msg$receipt))) {
pushover(message = "It's Still Above, and No One Acknowledged") } else { pushover(message = "It's Above, but someone has acknowledged. No Further messages until it trips again."); rm("msg"); }
} else { msg <<- pushover_emergency(message = "It's Above!") } }
cancelfunc <<- later(checkmail,15)
}
checkmail()
cancelfunc()
checkmail <- function() {
#system("./phantomjs get_internetlivestats.js")
page <- read_html("livestats.html")
node <- html_nodes(page,"span")
# The number we want, Emails sent Today, is element 22
# html_text(node)[22]
num.emails <- as.numeric(gsub(",","",html_text(node)[22]))
# we can now alert if that number is above our critical cutoff (130 billion, 130,000,000,000)
if (num.emails > 130000000000)
{ if (exists("msg")) {
if (!is.acknowledged((msg$receipt))) {
pushover(message = "It's Still Above, and No One Acknowledged") } else { pushover(message = "It's Above, but someone has acknowledged. No Further messages until it trips again."); rm("msg", pos = ".GlobalEnv"); }
} else { msg <<- pushover_emergency(message = "It's Above!") } }
cancelfunc <<- later(checkmail,15)
}
checkmail()
cancelfunc()
checkmail <- function() {
#system("./phantomjs get_internetlivestats.js")
page <- read_html("livestats.html")
node <- html_nodes(page,"span")
# The number we want, Emails sent Today, is element 22
# html_text(node)[22]
num.emails <- as.numeric(gsub(",","",html_text(node)[22]))
# we can now alert if that number is above our critical cutoff (130 billion, 130,000,000,000)
if (num.emails > 130000000000)
{ if (exists("msg")) {
if (!is.acknowledged((msg$receipt))) {
pushover(message = "It's Still Above, and No One Acknowledged") } else { pushover(message = "It's Above, but someone has acknowledged. No Further messages until it trips again."); rm("msg", pos = ".GlobalEnv"); }
} else { msg <<- pushover_emergency(message = "It's Above!") } }
cancelfunc <<- later(checkmail,15)
}
checkmail()
cancelfunc()
cancelfunc()
rm("msg", pos = ".GlobalEnv");
cancelfunc()
cancelfunc()
## Track changes to data frames
install.packages("arsenal")
library(arsenal)
df1 <- read.csv(file="survey_file_1.csv")
head(df1)
comparedf(df1,df2)
df2 <- read.csv(file="survey_file_2.csv") # 10 new rows of data, and 2 demographics changes made
comparedf(df1,df2)
summary(comparedf(df1,df2))
head(df1)
summary(comparedf(df1,df2, by="Response.ID"))
library(diffr)
library("shiny");
diffr("file1.html","file2.html", contextSize=0);
?diffr
myfunc2 <- function() {
print("this is the output of the scheduled later loop")
cancelfunc <<- later(myfunc2, 10)
}
cancelfunc <- later(myfunc2, 10)
library("later")
myfunc2 <- function() {
print("this is the output of the scheduled later loop")
cancelfunc <<- later(myfunc2, 10)
}
cancelfunc <- later(myfunc2, 10)
myfunc2()
cancelfunc()
cancelfunc()
myfunc2()
cancelfunc()
gettophot <- function() {
hot <- "https://www.reddit.com/hot/.json"
hot.df <- fromJSON(hot);
return(hot.df$data$children$data$title[1])
}
library("jsonlite")
## svDialogs example
install.packages("svDialogs")
library(svDialogs)
dlg_message("This is a test")
dlg_message("This is a test")
format(Sys.time(),"%a %b %d %X %Y")
load("~/OneDrive/Documents/Writing/PR4/Chapter 9 Code/ChangeAlert/.RData")
install.packages("jsonlite")
library("jsonlite")
hot <- "https://www.reddit.com/hot/.json"
hot.df <- fromJSON(hot);
hot.df$data$children$data$title[1]
library(diffr)
library("shiny");
diffr("file1.html","file2.html", contextSize=0);
install.packages("cronR")
library(cronR)
cronR:::cron_rstudioaddin()
install.packages("shinyFiles")
cronR:::cron_rstudioaddin()
library("later")
loop <- TRUE
myfunc <- function() {
print("This is the output of the scheduled later loop")
while(loop) { later(myfunc, 10); break;}
}
myfunc()
loop <- FALSE
myfunc2 <- function() {
print("this is the output of the scheduled later loop")
cancelfunc <<- later(myfunc2, 10)
}
cancelfunc <- later(myfunc2, 10)
cancelfunc()
install.packages("svDialogs")
library(svDialogs)
dlg_message("This is a test")
library("pushoverr")
set_pushover_app(token="ad7w7uqezs9zav81yev7znjhazgsz1")
set_pushover_user(user="GnoBrXCawlXUwcBSCGkhKBUgC1IMSO")
pushover(message = "This is a test message")
pushover_quiet(message = "This message doesn't vibrate or pop up on an Apple Watch")
pushover(message="High priority message",priority = 1)
emer_msg <- pushover_emergency(message = "This message will make a noise on an iPhone even with the mute switch on!");
is.acknowledged(emer_msg$receipt)
check_receipt(emer_msg$receipt)
